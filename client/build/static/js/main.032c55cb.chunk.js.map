{"version":3,"sources":["components/color_wheel3.png","components/griditem.js","components/grid.js","components/convert.js","components/value.js","components/last.js","components/colorSelect.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GridItem","id","this","props","ID","style","backgroundColor","color","React","PureComponent","Grid","require","List","t","arr","i","push","colors","active","state","updater","setInterval","getData","axios","get","then","res","ar","data","sort","a","b","time","length","square","setState","catch","err","console","log","clearInterval","nextProps","nextState","e","target","currentTarget","parseInt","Date","now","post","stopPropagation","content","key","onMouseDown","onMouseUp","onMouseOver","dpaint","bind","className","Component","RGB_MAX","HUE_MAX","SV_MAX","hsv2rgb","h","s","v","args","parseFloat","Math","floor","f","p","q","mod","r","g","Value","x","nativeEvent","offsetX","width","window","getComputedStyle","parentElement","getPropertyValue","setValue","rgb","convert","H","S","height","float","onClick","ClickHandler","Last","setColor","hist","V","ColorSelect","innerWidth","updateWindowDimensions","addEventListener","removeEventListener","pop","unshift","col","y","offsetY","sqrt","angle","acos","PI","findHS","src","Wheel","alt","marginTop","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.032c55cb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/color_wheel3.b9c1c8fb.png\";","import React from \"react\";\r\n// import './cantthinkofname.css';\r\n// style={{backgroundColor:this.state.color}} onClick={this.clickHandler.bind(this)}\r\nclass GridItem extends React.PureComponent {\r\n\t// constructor(props){\r\n\t// \tsuper(props);\r\n\t// \tthis.state={\r\n\t// \t\tcolor:'rgb(255,255,255)'\r\n\t// \t}\r\n\t// }\r\n\t// clickHandler(){\r\n\t// \tconst color=this.props.sendColor();\r\n\t// \tthis.setState({color:color});\r\n\t// }\r\n\trender() {\r\n\t\treturn( \r\n\t\t\t<div id={this.props.ID} style={{backgroundColor:this.props.color}}>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default GridItem;\r\n","import React from \"react\";\r\nimport './cantthinkofname.css';\r\nimport GridItem from './griditem'\r\nimport axios from 'axios';\r\nconst {List} =require('immutable');\r\nclass Grid extends React.Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.t='';\r\n\t\t// this.updater='diff';\r\n\t\tconst arr=[];\r\n\t\tfor(let i=0;i<1296;i++)\r\n\t\t\tarr.push('rgb(255,255,255)');\r\n\t\tthis.colors=arr;\r\n\t\tthis.active=false;\r\n\t\tthis.state={\r\n\t\t\tupdater:'diff'\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tthis.t=setInterval(()=>{this.getData()},1000);\r\n\t}\r\n\tgetData(){\r\n\t\taxios.get('/api')\r\n\t\t// .then(res=>res.data)\r\n\t\t.then(res=>{\r\n\t\t\t// console.log(res.data);\r\n\t\t\tlet colors=this.colors;\r\n\t\t\tconst ar=res.data.ar;\r\n\t\t\tar.sort(function(a,b){\r\n\t\t\t\treturn a.time-b.time;\r\n\t\t\t})\r\n\t\t\tfor(let i=0;i<ar.length;i++){\r\n\t\t\t\t// if(colors[ar[i].square]!==ar[i].color)\r\n\t\t\t\t\t// colors=colors.set(ar[i].square,ar[i].color)\r\n\t\t\t\t\tcolors[ar[i].square]=ar[i].color;\r\n\t\t\t}\r\n\t\t\t// this.updater='diff';\r\n\t\t\tthis.setState({\r\n\t\t\t\tupdater:'diff'\r\n\t\t\t});\r\n\t\t})\r\n\t\t.catch(err=>{\r\n\t\t\tconsole.log(err);\r\n\t\t});\r\n\t}\r\n\tcomponentWillUnmount(){\r\n\t\tclearInterval(this.t);\r\n\t}\r\n\tshouldComponentUpdate(nextProps,nextState){\r\n\t\tif(this.props!==nextProps)\r\n\t\t\treturn true;\r\n\t\t// if(this.state.colors===nextState.colors)\r\n\t\t\t// return false;\r\n\t\tif(nextState.updater==='self')\r\n\t\t\treturn false;\r\n\t\treturn true;\r\n\t}\r\n\tsendColor(){\r\n\t\treturn this.props.color;\r\n\t}\r\n\t// paint(e){\r\n\t// \tif(e.target!==e.currentTarget){\r\n\t// \t\tconst color=this.props.color;\r\n\t// \t\te.target.style.backgroundColor=color;\r\n\t// \t\tlet id=e.target.id;\r\n\t// \t\tid=parseInt(id);\r\n\t// \t\tthis.colors[id]=color;\r\n\t// \t\tconst data={\r\n\t// \t\t\tsquare:id,\r\n\t// \t\t\tcolor:color\r\n\t// \t\t}\r\n\t// \t\taxios.post('/api',data)\r\n\t// \t\t.then(res=>{\r\n\t// \t      console.log(res);\r\n\t// \t    })\r\n\t// \t    .catch((err)=>{\r\n\t// \t      console.log(err);\r\n\t// \t    });\r\n\t// \t    // this.updater='self';\r\n\t// \t\tthis.setState({\r\n\t// \t\t\t// colors:this.state.colors.set(id,this.props.color),\r\n\t// \t\t\tupdater:'self'\r\n\t// \t\t});\r\n\t// \t\te.stopPropagation();\r\n\t// \t}\r\n\t// }\r\n\tdpaint(e){\r\n\t\tif(e.target!==e.currentTarget && this.active===true){\r\n\t\t\tconst color=this.props.color;\r\n\t\t\te.target.style.backgroundColor=color;\r\n\t\t\tlet id=e.target.id;\r\n\t\t\tid=parseInt(id);\r\n\t\t\tthis.colors[id]=color;\r\n\t\t\tconst data={\r\n\t\t\t\tsquare:id,\r\n\t\t\t\tcolor:color,\r\n\t\t\t\ttime:Date.now()\r\n\t\t\t}\r\n\t\t\taxios.post('/api',data)\r\n\t\t\t.then(res=>{\r\n\t\t      console.log(res);\r\n\t\t    })\r\n\t\t    .catch((err)=>{\r\n\t\t      console.log(err);\r\n\t\t    });\r\n\t\t    // this.updater='self';\r\n\t\t\tthis.setState({\r\n\t\t\t\t// colors:this.state.colors.set(id,this.props.color),\r\n\t\t\t\tupdater:'self'\r\n\t\t\t});\r\n\t\t\te.stopPropagation();\r\n\t\t}\r\n\t}\r\n\trender(){\r\n\t\tconst content=[];\r\n\t\tconst colors=this.colors;\r\n\t\tfor(let i=0;i<1296;i++){\r\n\t\t\tcontent.push(<GridItem color={colors[i]} ID={i+'grid'} key={i}/>)\r\n\t\t}\r\n\t\treturn( \r\n\t\t\t<div onMouseDown={()=>{this.active=true;}}\r\n\t\t\t\t onMouseUp={()=>{this.active=false;}}\r\n\t\t\t\t onMouseOver={this.dpaint.bind(this)}\r\n\t\t\t\t className=\"grid\">\r\n\t\t\t\t{content}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Grid;\r\n","// export default function hsvToRgb(h, s, v){\r\n//     var r, g, b;\r\n\r\n//     var i = Math.floor(h * 6);\r\n//     var f = h * 6 - i;\r\n//     var p = v * (1 - s);\r\n//     var q = v * (1 - f * s);\r\n//     var t = v * (1 - (1 - f) * s);\r\n\r\n//     switch(i % 6){\r\n//         case 0: r = v; g = t; b = p; break;\r\n//         case 1: r = q; g = v; b = p; break;\r\n//         case 2: r = p; g = v; b = t; break;\r\n//         case 3: r = p; g = q; b = v; break;\r\n//         case 4: r = t; g = p; b = v; break;\r\n//         case 5: r = v; g = p; b = q; break;\r\n//     }\r\n\r\n//     // return [r * 255, g * 255, b * 255];\r\n//     return 'rgb('+r*255+','+g*255+','+b*255+')' ;\r\n// }\r\n\r\nconst RGB_MAX = 255\r\nconst HUE_MAX = 360\r\nconst SV_MAX = 100\r\n\r\nfunction _normalizeAngle (degrees) {\r\n  return (degrees % 360 + 360) % 360;\r\n}\r\n\r\n\r\nexport default  function hsv2rgb(h, s, v) {\r\n  if (typeof h === 'object') {\r\n    const args = h\r\n    h = args.h; s = args.s; v = args.v;\r\n  }\r\n\r\n  h = _normalizeAngle(h)\r\n  h = (h === HUE_MAX) ? 1 : (h % HUE_MAX / parseFloat(HUE_MAX) * 6)\r\n  s = (s === SV_MAX) ? 1 : (s % SV_MAX / parseFloat(SV_MAX))\r\n  v = (v === SV_MAX) ? 1 : (v % SV_MAX / parseFloat(SV_MAX))\r\n\r\n  var i = Math.floor(h)\r\n  var f = h - i\r\n  var p = v * (1 - s)\r\n  var q = v * (1 - f * s)\r\n  var t = v * (1 - (1 - f) * s)\r\n  var mod = i % 6\r\n  var r = [v, q, p, p, t, v][mod]\r\n  var g = [t, v, v, q, p, p][mod]\r\n  var b = [p, p, t, v, v, q][mod]\r\n\r\n  const cob= {\r\n    r: Math.floor(r * RGB_MAX),\r\n    g: Math.floor(g * RGB_MAX),\r\n    b: Math.floor(b * RGB_MAX),\r\n  }\r\n  return 'rgb('+(cob.r)+','+(cob.g)+','+(cob.b)+')' ;\r\n}\r\n\r\n// colorsys.hsv_to_rgb = colorsys.hsv2Rgb\r\n// colorsys.hsvToRgb = colorsys.hsv2Rgb\r\n\r\n// colorsys.rgb2Hex = function (r, g, b) {\r\n//   if (typeof r === 'object') {\r\n//     const args = r\r\n//     r = args.r; g = args.g; b = args.b;\r\n//   }\r\n//   r = Math.round(r).toString(16)\r\n//   g = Math.round(g).toString(16)\r\n//   b = Math.round(b).toString(16)\r\n\r\n//   r = r.length === 1 ? '0' + r : r\r\n//   g = g.length === 1 ? '0' + g : g\r\n//   b = b.length === 1 ? '0' + b : b\r\n\r\n//   return '#' + r + g + b\r\n// }","import React from 'react';\r\nimport convert from './convert';\r\nclass Value extends React.PureComponent{\r\n\tClickHandler(e){\r\n\t\tif(e.target!==e.currentTarget){\r\n\t\tconst x=e.nativeEvent.offsetX;\r\n\t\tconst compStyle=window.getComputedStyle(e.target.parentElement);\r\n\t\tlet width=compStyle.getPropertyValue('width');\r\n\t\twidth=parseInt(width);\r\n\t\tlet id=parseInt(e.target.id);\r\n\t\tconst v=((id*width/50+x)/width)*100;\r\n\t\te.stopPropagation();\r\n\t\tthis.props.setValue(v);\r\n\t}\r\n\t}\r\n\trender(){\r\n\t\t\r\n\t\tconst ar=[];\r\n\t\tfor(let i=0;i<50;i++){\r\n\t\t\tconst rgb=convert(this.props.H,this.props.S,i*2);\r\n\t\t\tconst style={height:'20px',width:'2%',float:'left'};\r\n\t\t\tstyle.backgroundColor=rgb;\r\n\t\t\tar.push(<div id={''+i} style={style}></div>);\r\n\t\t}\r\n\t\treturn(\r\n\t\t\t<div id='value' onClick={this.ClickHandler.bind(this)} style={{width:'90%'}}>\r\n\t\t\t\t{ar}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Value;","import React from 'react';\r\nimport convert from './convert';\r\nclass Last extends React.PureComponent{\r\n\tClickHandler(e){\r\n\t\tif(e.target!==e.currentTarget){\r\n\t\t// const x=e.nativeEvent.offsetX;\r\n\t\t// const compStyle=window.getComputedStyle(e.target);\r\n\t\t// let color=compStyle.getPropertyValue('backgroundColor');\r\n\t\t// width=parseInt(width);\r\n\t\tlet id=parseInt(e.target.id);\r\n\t\t// const v=((id*width/50+x)/width)*100;\r\n\t\te.stopPropagation();\r\n\t\tthis.props.setColor(this.props.hist[id]);\r\n\t}\r\n\t}\r\n\trender(){\r\n\t\t\r\n\t\tconst ar=[];\r\n\t\tfor(let i=0;i<5;i++){\r\n\t\t\tconst rgb=convert(this.props.hist[i].H,this.props.hist[i].S,this.props.hist[i].V);\r\n\t\t\tconst style={height:'20px',width:'20%',float:'left'};\r\n\t\t\tstyle.backgroundColor=rgb;\r\n\t\t\tar.push(<div id={i+'id'} style={style}></div>);\r\n\t\t}\r\n\t\t// const ar=this.props.hist.map((color)=>{\r\n\t\t// \tcolor=convert(color.H,color.S,color.V);\r\n\t\t// \tconst style={height:'20px',width:'20%',float:'left',backgroundColor:color};\r\n\t\t// \treturn <div id={'id'+} style={style}></div>\r\n\t\t// })\r\n\t\treturn(\r\n\t\t\t<div id='value' onClick={this.ClickHandler.bind(this)} style={{width:'90%'}}>\r\n\t\t\t\t{ar}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Last;","import React from \"react\";\r\nimport './cantthinkofname.css';\r\nimport Wheel from './color_wheel3.png';\r\nimport Value from './value';\r\nimport convert from './convert';\r\nimport Last from './last';\r\nclass ColorSelect extends React.PureComponent {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\tH:0,\r\n\t\t\tS:0,\r\n\t\t\tV:50\r\n\t\t}\r\n\t\tthis.width=(window.innerWidth)*23/100;\r\n\t\tthis.hist=[{\r\n\t\t\t\t\t\tH:0,S:0,V:50\r\n\t\t\t\t   },\r\n\t\t\t\t   {\r\n\t\t\t\t\t\tH:0,S:0,V:50\r\n\t\t\t\t   },\r\n\t\t\t\t   {\r\n\t\t\t\t\t\tH:0,S:0,V:50\r\n\t\t\t\t   },\r\n\t\t\t\t   {\r\n\t\t\t\t\t\tH:0,S:0,V:50\r\n\t\t\t\t   },\r\n\t\t\t\t   {\r\n\t\t\t\t\t\tH:0,S:0,V:50\r\n\t\t\t\t   }];\r\n\t}\r\n\tcomponentDidMount() {\r\n\t  this.updateWindowDimensions();\r\n\t  window.addEventListener('resize', this.updateWindowDimensions);\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t  window.removeEventListener('resize', this.updateWindowDimensions);\r\n\t}\r\n\r\n\tupdateWindowDimensions() {\r\n\t  this.width=(window.innerWidth)*23/100;\r\n\t}\r\n\tsetValue(v){\r\n\t\tconst color=convert(this.state.H,this.state.S,v);\r\n\t\tthis.props.setColor(color);\r\n\t\tthis.hist.pop();\r\n\t\tthis.hist.unshift({\r\n\t\t\tH:this.state.H,\r\n\t\t\tS:this.state.S,\r\n\t\t\tV:v\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\tV:v\r\n\t\t});\r\n\t}\r\n\tsetColor(color){\r\n\t\tconst col=convert(color.H,color.S,color.V);\r\n\t\tthis.props.setColor(col);\r\n\t\tthis.setState({\r\n\t\t\t...color\r\n\t\t});\r\n\t}\r\n\tfindHS(e){\r\n\t\t// 100.5\r\n\t\t// this.width/=4;\r\n\t\t// const c=(2*this.width/25)+(2*23*this.width/125);\r\n\t\tconst x=e.nativeEvent.offsetX-this.width*2/5;\r\n\t\tconst y=this.width*2/5-e.nativeEvent.offsetY;\r\n\t\tconsole.log(this.width,x,y)\r\n\t\tlet r=Math.sqrt(x*x+y*y);\r\n\t\tlet angle=Math.acos(x/r);\r\n\t\tr=(r/(this.width*2/5))*100;\r\n\t\tif(y<0)\r\n\t\t\tangle=2*(Math.PI)-angle;\r\n\t\tangle=angle*180/(Math.PI);\r\n\t\t// const s=r>100?100:r;\r\n\t\tconst color=convert(angle,r,this.state.V);\r\n\t\tthis.props.setColor(color);\r\n\t\tthis.hist.pop();\r\n\t\tthis.hist.unshift({\r\n\t\t\tH:angle,\r\n\t\t\tS:r,\r\n\t\t\tV:this.state.V\r\n\t\t});\r\n\t\tthis.setState({\r\n\t\t\tH:angle,\r\n\t\t\tS:r\r\n\t\t});\r\n\t\t\r\n\t}\r\n\trender() {\r\n\t\tconst color=convert(this.state.H,this.state.S,this.state.V);\r\n\t\treturn( \r\n\t\t\t<div className=\"ColorSelect\">\r\n\t\t\t\t<p>Select color here:</p>\r\n\t\t\t\t<div id='wheel' >\r\n\t\t\t\t\t<img onClick={this.findHS.bind(this)} src={Wheel} alt='color wheel' />\r\n\t\t\t\t</div>\r\n\t\t\t\t<Value H={this.state.H} S={this.state.S} setValue={this.setValue.bind(this)}/>\r\n\t\t\t\t<p style={{marginTop:'50px'}}>selected color is:</p>\r\n\t\t\t\t<div style={{\r\n\t\t\t\t\t\t\t  width:'40%',\r\n\t\t\t\t\t\t\t  height:'100px',\r\n\t\t\t\t\t\t\t  backgroundColor:color\r\n\t\t\t\t           }}></div>\r\n\t\t\t\t<p>{color}</p>\r\n\t\t\t\t<p>last 5 selected colors:</p>\r\n\t\t\t\t<Last hist={this.hist} setColor={this.setColor.bind(this)}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default ColorSelect;\r\n","import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\nimport Grid from './components/grid';\nimport ColorSelect from './components/colorSelect';\nclass App extends React.Component{\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tcolor:'rgb(127,127,127)'\n\t\t}\n\t}\n\tsetColor(color){\n\t\tthis.setState({color:color});\n\t}\n\trender() {\n\t  return (\n\t    <div style={{width:'100%'}} className=\"App\">\n\t      <Grid color={this.state.color}/>\n\t      <ColorSelect setColor={this.setColor.bind(this)}/>\n\t    </div>\n\t  );\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}